name: Deploy Wellness Agent to Render

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Lint with flake8
      run: |
        pip install flake8
        # Stop the build if there are Python syntax errors or undefined names
        flake8 app/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 app/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      continue-on-error: true
    
    - name: Test API endpoints
      run: |
        # Start the API in background
        python app/start_wellness_api.py &
        API_PID=$!
        
        # Wait for API to start
        sleep 10
        
        # Test health endpoint
        curl -f http://localhost:8000/health || exit 1
        
        # Test wellness endpoint
        curl -X POST http://localhost:8000/wellness \
          -H "Content-Type: application/json" \
          -d '{"query": "How can I reduce stress?", "user_id": "test_user"}' || exit 1
        
        # Stop the API
        kill $API_PID
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        ENVIRONMENT: test
      continue-on-error: true

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to Render
      uses: johnbeynon/render-deploy-action@v0.0.8
      with:
        service-id: ${{ secrets.RENDER_SERVICE_ID }}
        api-key: ${{ secrets.RENDER_API_KEY }}
        wait-for-success: true

  notify:
    needs: [test, deploy]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Notify deployment status
      run: |
        if [ "${{ needs.deploy.result }}" == "success" ]; then
          echo "‚úÖ Wellness Agent deployed successfully!"
          echo "üåê Check your Render dashboard for the live URL"
          echo "üìö API Documentation: https://your-app.onrender.com/docs"
          echo "‚ù§Ô∏è Health Check: https://your-app.onrender.com/health"
        else
          echo "‚ùå Deployment failed. Check the logs above."
        fi
